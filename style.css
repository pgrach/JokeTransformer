:root {
    --bg: #fff;
    --text: #222;
    --primary: #008cff;
    --fairy-tale: rgb(241, 191, 200);
    --cerise: red;
    --yellow-green: green;
    --highl: rgba(255, 255, 0, 0.438);
}

@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@500;700&display=swap');

h3 {
    font-family: 'Montserrat', sans-serif;
    color: var(--primary);
    font-size: 1.75em;
    text-align: center;
}

body.dark-mode {
    --bg: #222;
    --text: #fff;
    --primary: #fff;
    --fairy-tale: grey;
    --cerise: #2196F3;
    --yellow-green: darkblue;
    --highl: rgba(255, 255, 0, 0.438);

}

/* Light Theme Styles */
body {
    background-color: var(--bg);
    color: var(--text);
}

/* Toggle Switch Styles */

.toggle {
    position: absolute;
    top: 20px;
    right: 20px;
}

.switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 34px;
}

/* Hide default HTML checkbox */
.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

/* Slider */
.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
    border-radius: 34px;
}

.slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
}

input:checked+.slider {
    background-color: #2196F3;
}

input:focus+.slider {
    box-shadow: 0 0 1px #2196F3;
}

input:checked+.slider:before {
    transform: translateX(26px);
}

/* ++++++++++++++++++++++++++++++++ */

.container {
    padding: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    /* This centers the children vertically */
    height: 100vh;
    /* This is necessary to make vertical centering work */
}


.btn {
    padding: 10px 20px;
    font-size: 1em;
    border-radius: 5px;
    transition: background-color 0.3s ease, transform 0.3s ease;
}

.btn:hover {
    transform: scale(1.05);
}

.section1, .section2, .section3, .section4, .section5 {
    padding: 20px 0;
    text-align: center;
    font-family: 'Roboto', sans-serif;
}

form {
    margin: 20px 0;
}

.tremble {
    animation: tremble 0.5s infinite;
}

.cursor-change {
    cursor: url('cursor.cur'), auto;
}

fieldset {
    border: 2px solid var(--primary);
    border-radius: 10px;
    padding: 20px;
}

legend.form-heading {
    padding: 10px;
    color: var(--primary);
    font-size: 1.2em;
    font-weight: bold;
}

#bringItBtn, #transBtn {
    display: block;
    margin: auto;
}

#buttonForm {
    display: flex;
    align-items: center;
}

#markerBtn {
    display: flex;/* Make the button a flex container */
    justify-content: center;/* Center content horizontally */
    align-items: center;/* Center content vertically */
    width: 3rem;
    height: 3rem;
    margin: 1rem;  /* Add some margin */
    box-shadow: 0 0 10px rgba(0,0,0,0.2);  /* Add a box shadow */
    border-radius: 30% 30% 30% 30%/30% 30% 30% 30%;
    font-size: 1.5rem;
    border: none;
    background-color: var(--yellow-green);
    transition: transform 0.3s ease-in-out;
}

#markerBtn:hover {
    transform: scale(1.1);/* On hover, scale the button to make it slightly larger */
    cursor: grab; /* Change the cursor to a grab on hover */
    background-color: var(--primary);  /* Change the background color on hover */
}

#markerBtn:active {
    transform: scale(0.95); /* On click, scale the button back down slightly for a "pressed" effect */
}

#emoji {
    background: transparent;
}

#newEmoji {
    background: transparent;
}

#markerBtn:hover #emoji {
    animation-play-state: running;
}

#gif img {
    max-height: 20vh;
    width: auto;
}

#gif {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    /* This is to align the items vertically */
}

.highlight {
    filter: url(#squiggly);
}

@keyframes tremble {

    0%,
    100% {
        transform: translateX(0);
    }

    25%,
    75% {
        transform: translateX(20%);
    }

    50% {
        transform: translateX(-20%);
    }
}